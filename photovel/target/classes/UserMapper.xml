<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">
	<insert id="insertUser" parameterType="User">
		INSERT INTO user
		VALUES (
			#{user_id}, #{user_password}, #{user_nick_name}, #{user_gender}, #{user_phone1}, #{user_phone2},
			null, SYSDATE(), 'N', SYSDATE(), 
			'O', null, 'tmp', 0)
	</insert>
	<insert id="insertAdminUser" parameterType="User">
		INSERT INTO user
		VALUES (
			#{user_id}, #{user_password}, #{user_nick_name}, #{user_gender},
			#{user_phone1}, #{user_phone2}, #{user_profile_photo}, 
			SYSDATE(), #{user_state_flag}, SYSDATE(),
			#{user_sns_status}, #{user_sns_token}, #{user_push_token},
			#{user_friend_count}
		)
	</insert>
 	<select id="selectAll" resultType="User">
 		SELECT * FROM user
 		ORDER BY user_sign_date DESC
 	</select>
 	<select id="selectByState" resultType="User" parameterType="string">
		SELECT * FROM user 
		<where>
	     <choose>
	     <when  test='_parameter != "A"'>
		    user_state_flag = #{user_state_flag}
		 </when>
		 </choose> 
	    </where>
		<!-- WHERE 
			user_state_flag = #{user_state_flag} -->
		ORDER BY user_sign_date DESC
	</select>
	<select id="selectByDate" resultType="User" parameterType="hashmap">
		SELECT * FROM user WHERE
		<![CDATA[ (user_sign_date <= #{to_date} ) and
	 	 		  (user_sign_date >= #{from_date} ) ]]>
	  	ORDER BY user_sign_date 
	</select>	
	<select id="selectById" resultType="User" parameterType="string">
		SELECT * FROM user 
		WHERE user_id = #{user_id}
	</select>
	<select id="selectByIds" resultType="User" parameterType="string">
		SELECT * FROM user 
		WHERE user_id LIKE '%${value}%'
		ORDER BY user_id ASC
	</select>
	<select id="selectByName" resultType="User" parameterType="string">
		SELECT * FROM user 
		WHERE user_nickname LIKE '%${value}%'
		ORDER BY user_nickname ASC
	</select>
	<update id="update" parameterType="hashmap">
	    UPDATE user SET 
	    <choose>
	      	<when test="user_profile_photo != null">
	    		user_password = #{user_password}, 
	    		user_nick_name = #{user_nick_name}, 
	    		user_gender = #{user_gender}, 
	    		user_phone1 = #{user_phone1}, 
	    		user_phone2 = #{user_phone2}, 
	    		user_profile_photo = #{user_profile_photo},
	    		user_state_flag = #{user_state_flag}
	    	</when>
	    	<otherwise>
	    		user_password = #{user_password}, 
	    		user_nick_name = #{user_nick_name}, 
	    		user_gender = #{user_gender}, 
	    		user_phone1 = #{user_phone1}, 
	    		user_phone2 = #{user_phone2}, 
	    		user_state_flag = #{user_state_flag}
			</otherwise>
	    </choose>
	    WHERE user_id = #{user_id}
	</update>
	<update id="leave" parameterType="string">
	    UPDATE user
	    SET user_state_flag = 'L' 
	    WHERE user_id = #{user_id, jdbcType=VARCHAR}
	</update>
	<update id="black" parameterType="string">
	    UPDATE user 
	    SET user_state_flag = 'B' 
	    where user_id = #{user_id, jdbcType=VARCHAR}
	</update>
	<update id="normal" parameterType="string">
	    UPDATE user 
	    SET user_state_flag = 'N' 
	    WHERE user_id = #{user_id, jdbcType=VARCHAR}
	</update> 
 	<!-- <select id="selectByPhone2" resultType="User">
 		SELECT REGEXP_REPLACE(user_phone2,'([[:digit:]]{3})([[:digit:]]{3,4})([[:digit:]]{4})','\1-\2-\3') 
 		FROM user
 		WHERE user_phone2 LIKE '%${value}%'
		ORDER BY user_nickname ASC
	</select> -->
	
</mapper>